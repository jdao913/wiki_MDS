Hybrid automaton - Wikipedia


From Wikipedia, the free encyclopedia 

					Jump to:					navigation, 					search

In automata theory, a hybrid automaton (plural: hybrid automata or hybrid automatons) is a mathematical model for precisely describing systems in which digital computational processes interact with analog physical processes. A hybrid automaton is a finite state machine with a finite set of continuous variables whose values are described by a set of ordinary differential equations. This combined specification of discrete and continuous behaviors enables dynamic systems that comprise both digital and analog components to be modeled and analyzed.



Contents


1 Examples
2 Formal Definition
3 Related models
4 References
5 Further reading



Examples[edit]
A simple example is a room-thermostat-heater system where the temperature of the room evolves according to laws of thermodynamics and the state of the heater (on/off); the thermostat senses the temperature, performs certain computations and turns the heater on and off. In general, hybrid automata have been used to model and analyze a variety of embedded systems including vehicle control systems, air traffic control systems, mobile robots, and processes from systems biology.
Formal Definition[edit]
An Alur-Henzinger hybrid automaton 



H


{\displaystyle H}

 comprises the following components:[1]

A finite set 



X
=
{

x

1


,
.
.
.
,

x

n


}


{\displaystyle X=\{x_{1},...,x_{n}\}}

 of real-numbered variables. The number 



n


{\displaystyle n}

 is called the dimension of 



H


{\displaystyle H}

. Let 






X
˙





{\displaystyle {\dot {X}}}

 be the set 



{




x
˙




1


,
.
.
.
,




x
˙




n


}


{\displaystyle \{{\dot {x}}_{1},...,{\dot {x}}_{n}\}}

 of dotted variables that represent first derivatives during continuous change, and let 




X
′



{\displaystyle X'}

 be the set 



{

x

1

′

,
.
.
.
,

x

n

′

}


{\displaystyle \{x'_{1},...,x'_{n}\}}

 of primed variables that represent values at the conclusion of discrete change.
A finite multidigraph 



(
V
,
E
)


{\displaystyle (V,E)}

. The vertices in 



V


{\displaystyle V}

 are called control modes. The edges in 



E


{\displaystyle E}

 are called control switches.
Three vertex labeling functions init, inv, and flow that assign to each control mode 



v
∈
V


{\displaystyle v\in V}

 three predicates. Each initial condition init



(
v
)


{\displaystyle (v)}

 is a predicate whose free variables are from 



X


{\displaystyle X}

. Each invariant condition inv



(
v
)


{\displaystyle (v)}

 is a predicate whose free variables are from 



X


{\displaystyle X}

. Each flow condition flow



(
v
)


{\displaystyle (v)}

 is a predicate whose free variables are from 



X
∪



X
˙





{\displaystyle X\cup {\dot {X}}}

.

So this is a labeled multidigraph.

An edge labeling function jump that assigns to each control switch 



e
∈
E


{\displaystyle e\in E}

 a predicate. Each jump condition jump



(
e
)


{\displaystyle (e)}

 is a predicate whose free variables are from 



X
∪

X
′



{\displaystyle X\cup X'}

.
A finite set 



Σ


{\displaystyle \Sigma }

 of events, and an edge labeling function event: 



E
→
Σ


{\displaystyle E\rightarrow \Sigma }

 that assigns to each control switch an event.

Related models[edit]
Hybrid automata come in several flavors: The Alur-Henzinger hybrid automaton is a popular model; it was developed primarily for algorithmic analysis of hybrid systems model checking. The HyTech model checking tool is based on this model. The Hybrid Input/Output Automaton model has been developed more recently. This model enables compositional modeling and analysis of hybrid systems. Another formalism which is useful to model implementations of hybrid automaton is the lazy linear hybrid automaton. A sub-class of hybrid automata are timed automata in which all continuous variables have derivative 1. State reachability is decidable for this sub-class, which is why it is an interesting formalism for formal verification.
References[edit]


^ Henzinger, T.A. "The Theory of Hybrid Automata". Proceedings of the Eleventh Annual IEEE Symposium on Logic in Computer Science (LICS), pages 278-292, 1996.


Further reading[edit]

Rajeev Alur, Costas Courcoubetis, Nicolas Halbwachs, Thomas A. Henzinger, Pei-Hsin Ho, Xavier Nicollin, Alfredo Olivero, Joseph Sifakis, and Sergio Yovine The algorithmic analysis of hybrid systems. Theoretical Computer Science, volume 138(1), pages 3–34, 1995.
Nancy Lynch, Roberto Segala, Frits Vaandrager, Hybrid I/O Automata. Information and Computation, volume 185(1), pages 103–157, 2003.





 
						Retrieved from "https://en.wikipedia.org/w/index.php?title=Hybrid_automaton&oldid=811146955"					
Categories: Automata (computation)Differential equations 
