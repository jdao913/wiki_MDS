Language equation - Wikipedia


From Wikipedia, the free encyclopedia 

					Jump to:					navigation, 					search

Language equations are mathematical statements that resemble numerical equations, but the variables assume values of formal languages rather than numbers. Instead of arithmetic operations in numerical equations, the variables are joined by language operations. Among the most common operations on two languages A and B are the set union A ∪ B, the set intersection A ∩ B, and the concatenation A⋅B. Finally, as an operation taking a single operand, the set A* denotes the Kleene star of the language A. Therefore language equations can be used to represent formal grammars, since the languages generated by the grammar must be the solution of a system of language equations.



Contents


1 Language equations and context-free grammars
2 Language equations and finite automata
3 Conway's problem
4 Language equations with Boolean operations
5 Language equations over a unary alphabet
6 See also
7 References
8 External links



Language equations and context-free grammars[edit]
Ginsburg and Rice[1] gave an alternative definition of context-free grammars by language equations. To every context-free grammar 



G
=
(
V
,
Σ
,
R
,
S
)


{\displaystyle G=(V,\Sigma ,R,S)}

, is associated a system of equations in variables 



V


{\displaystyle V}

. Each variable 



X
∈
V


{\displaystyle X\in V}

 is an unknown language over 



Σ


{\displaystyle \Sigma }

 and is defined by equation 



X
=

α

1


∪
…
∪

α

m




{\displaystyle X=\alpha _{1}\cup \ldots \cup \alpha _{m}}

 where 



X
→

α

1




{\displaystyle X\to \alpha _{1}}

, ..., 



X
→

α

m




{\displaystyle X\to \alpha _{m}}

 are all productions for 



X


{\displaystyle X}

. Ginsburg and Rice used a fixed-point iteration argument to show that a solution always exists, and proved that the assignment 



X
=

L

G


(
X
)


{\displaystyle X=L_{G}(X)}

 is the least solution to this system, i.e. any other solution must be a componentwise subset of this one.
Language equations with added intersection analogously correspond to conjunctive grammars.
Language equations and finite automata[edit]
Brzozowski and Leiss[2] studied left language equations where every concatenation is with a singleton constant language on the left, e.g. 



{
a
}
⋅
X


{\displaystyle \{a\}\cdot X}

 with variable 



X


{\displaystyle X}

, but not 



X
⋅
Y


{\displaystyle X\cdot Y}

 nor 



X
⋅
{
a
}


{\displaystyle X\cdot \{a\}}

. Each equation is of the form 




X

i


=
F
(

X

1


,
.
.
.
,

X

k


)


{\displaystyle X_{i}=F(X_{1},...,X_{k})}

 with one variable on the right-hand side. Every nondeterministic finite automaton has such corresponding equation using left-concatenation and union, see Fig. 1. If intersection operation is allowed, equations correspond to alternating finite automata.




Fig. 1: A finite automaton with associated system of equations 




S

1


=
1

S

1


∪
0

S

2




{\displaystyle S_{1}=1S_{1}\cup 0S_{2}}

, 




S

2


=
1

S

2


∪
0

S

1


∪
{
ϵ
}


{\displaystyle S_{2}=1S_{2}\cup 0S_{1}\cup \{\epsilon \}}

 where 



ϵ


{\displaystyle \epsilon }

 is the empty word.


Baader and Narendran[3] studied equations 



F
(

X

1


,
…
,

X

k


)
=
G
(

X

1


,
…
,

X

k


)


{\displaystyle F(X_{1},\ldots ,X_{k})=G(X_{1},\ldots ,X_{k})}

 using left-concatenation and union and proved that their satisfiability problem is EXPTIME-complete.
Conway's problem[edit]
Conway[4] proposed the following problem: given a constant finite language 



L


{\displaystyle L}

, is the greatest solution of equation 



L
X
=
X
L


{\displaystyle LX=XL}

 always regular? This problem was studied by Karhumäki and Petre[5][6] who gave an affirmative answer in a special case. A strongly negative answer to Conway's problem was given by Kunc[7] who constructed a finite language 



L


{\displaystyle L}

 such that the greatest solution of this equation is not recursively enumerable.
Kunc[8] also proved that the greatest solution of inequality 



L
X
⊆
X
L


{\displaystyle LX\subseteq XL}

 is always regular.
Language equations with Boolean operations[edit]
Language equations with concatenation and Boolean operations were first studied by Parikh, Chandra, Halpern and Meyer [9] who proved that the satisfiability problem for a given equation is undecidable, and that if a system of language equations has a unique solution, then that solution is recursive. Later, Okhotin[10] proved that the unsatisfiability problem is RE-complete and that every recursive language is a unique solution of some equation.
Language equations over a unary alphabet[edit]
For a one-letter alphabet, Leiss[11] discovered the first language equation with a nonregular solution, using complementation and concatenation operations. Later, Jeż[12] showed that non-regular unary languages can be defined by language equations with union, intersection and concatenation, equivalent to conjunctive grammars. By this method Jeż and Okhotin[13] proved that every recursive unary language is a unique solution of some equation.
See also[edit]

Boolean grammar
Arden's Rule
Set constraint

References[edit]



^ Ginsburg, Seymour; Rice, H. Gordon (1962). "Two Families of Languages Related to ALGOL". Journal of the ACM. 9 (3): 350–371. doi:10.1145/321127.321132. ISSN 0004-5411. 
^ Brzozowski, J.A.; Leiss, E. (1980). "On equations for regular languages, finite automata, and sequential networks". Theoretical Computer Science. 10 (1): 19–35. doi:10.1016/0304-3975(80)90069-9. ISSN 0304-3975. 
^ Baader, Franz; Narendran, Paliath (2001). "Unification of Concept Terms in Description Logics". Journal of Symbolic Computation. 31 (3): 277–305. doi:10.1006/jsco.2000.0426. ISSN 0747-7171. 
^ Conway, John Horton (1971). Regular Algebra and Finite Machines. Chapman and Hall. ISBN 978-0-486-48583-6. 
^ Karhumäki, Juhani; Petre, Ion (2002). "Conway's problem for three-word sets". Theoretical Computer Science. 289 (1): 705–725. doi:10.1016/S0304-3975(01)00389-9. ISSN 0304-3975. 
^ Karhumäki, Juhani; Petre, Ion (2002). "The Branching Point Approach to Conway's Problem". 2300: 69–76. doi:10.1007/3-540-45711-9_5. ISSN 0302-9743. 
^ Kunc, Michal (2007). "The Power of Commuting with Finite Sets of Words". Theory of Computing Systems. 40 (4): 521–551. doi:10.1007/s00224-006-1321-z. ISSN 1432-4350. 
^ Kunc, Michal (2005). "Regular solutions of language inequalities and well quasi-orders". Theoretical Computer Science. 348 (2-3): 277–293. doi:10.1016/j.tcs.2005.09.018. ISSN 0304-3975. 
^ Parikh, Rohit; Chandra, Ashok; Halpern, Joe; Meyer, Albert (1985). "Equations between Regular Terms and an Application to Process Logic". SIAM Journal on Computing. 14 (4): 935–942. doi:10.1137/0214066. ISSN 0097-5397. 
^ Okhotin, Alexander (2010). "Decision problems for language equations". Journal of Computer and System Sciences. 76 (3-4): 251–266. doi:10.1016/j.jcss.2009.08.002. ISSN 0022-0000. 
^ Leiss, E.L. (1994). "Unrestricted complementation in language equations over a one-letter alphabet". Theoretical Computer Science. 132 (1-2): 71–84. doi:10.1016/0304-3975(94)90227-5. ISSN 0304-3975. 
^ Jeż, Artur (2008). "Conjunctive grammars generate non-regular unary languages". International Journal of Foundations of Computer Science. 19 (03): 597–615. doi:10.1142/S012905410800584X. ISSN 0129-0541. 
^ Jeż, Artur; Okhotin, Alexander (2014). "Computational completeness of equations over sets of natural numbers". Information and Computation. 237: 56–94. doi:10.1016/j.ic.2014.05.001. ISSN 0890-5401. 



External links[edit]

Workshop on Theory and Applications of Language Equations (TALE 2007)




This set theory-related article is a stub. You can help Wikipedia by expanding it.


v
t
e







P ≟ NP 
This theoretical computer science–related article is a stub. You can help Wikipedia by expanding it.


v
t
e









 
						Retrieved from "https://en.wikipedia.org/w/index.php?title=Language_equation&oldid=799381780"					
Categories: Formal languagesEquationsSet theory stubsTheoretical computer science stubsHidden categories: All stub articles 
