Mathematical optimization - Wikipedia


From Wikipedia, the free encyclopedia 

					Jump to:					navigation, 					search

"Mathematical programming" redirects here. For the peer-reviewed journal, see Mathematical Programming.
"Optimization" and "Optimum" redirect here. For other uses, see Optimization (disambiguation) and Optimum (disambiguation).




Graph of a paraboloid given by z = f(x, y) = −(x² + y²) + 4. The global maximum at (x, y, z) = (0, 0, 4) is indicated by a blue dot.






Nelder-Mead minimum search of Simionescu's function. Simplex vertices are ordered by their value, with 1 having the lowest (best) value.


In mathematics, computer science and operations research, mathematical optimization or mathematical programming, alternatively spelled optimisation, is the selection of a best element (with regard to some criterion) from some set of available alternatives.[1]
In the simplest case, an optimization problem consists of maximizing or minimizing a real function by systematically choosing input values from within an allowed set and computing the value of the function. The generalization of optimization theory and techniques to other formulations constitutes a large area of applied mathematics. More generally, optimization includes finding "best available" values of some objective function given a defined domain (or input), including a variety of different types of objective functions and different types of domains.



Contents


1 Optimization problems
2 Notation

2.1 Minimum and maximum value of a function
2.2 Optimal input arguments


3 History
4 Major subfields

4.1 Multi-objective optimization
4.2 Multi-modal optimization


5 Classification of critical points and extrema

5.1 Feasibility problem
5.2 Existence
5.3 Necessary conditions for optimality
5.4 Sufficient conditions for optimality
5.5 Sensitivity and continuity of optima
5.6 Calculus of optimization


6 Computational optimization techniques

6.1 Optimization algorithms
6.2 Iterative methods
6.3 Global convergence
6.4 Heuristics


7 Applications

7.1 Mechanics
7.2 Economics and finance
7.3 Electrical engineering
7.4 Civil engineering
7.5 Operations research
7.6 Control engineering
7.7 Geophysics
7.8 Molecular modeling


8 Solvers
9 See also
10 Notes
11 Further reading

11.1 Comprehensive

11.1.1 Undergraduate level
11.1.2 Graduate level


11.2 Continuous optimization
11.3 Combinatorial optimization
11.4 Relaxation (extension method)


12 Journals
13 External links



Optimization problems[edit]
Main article: Optimization problem
An optimization problem can be represented in the following way:

Given: a function f : A 



→


{\displaystyle \to }

 R from some set A to the real numbers
Sought: an element x0 in A such that f(x0) ≤ f(x) for all x in A ("minimization") or such that f(x0) ≥ f(x) for all x in A ("maximization").

Such a formulation is called an optimization problem or a mathematical programming problem (a term not directly related to computer programming, but still in use for example in linear programming – see History below). Many real-world and theoretical problems may be modeled in this general framework. Problems formulated using this technique in the fields of physics and computer vision may refer to the technique as energy minimization, speaking of the value of the function f as representing the energy of the system being modeled.
Typically, A is some subset of the Euclidean space Rn, often specified by a set of constraints, equalities or inequalities that the members of A have to satisfy. The domain A of f is called the search space or the choice set, while the elements of A are called candidate solutions or feasible solutions.
The function f is called, variously, an objective function, a loss function or cost function (minimization),[2] a utility function or fitness function (maximization), or, in certain fields, an energy function or energy functional. A feasible solution that minimizes (or maximizes, if that is the goal) the objective function is called an optimal solution.
In mathematics, conventional optimization problems are usually stated in terms of minimization. Generally, unless both the objective function and the feasible region are convex in a minimization problem, there may be several local minima. A local minimum x* is defined as a point for which there exists some δ > 0 such that for all x where





∥

x

−


x


∗


∥
≤
δ
,



{\displaystyle \|\mathbf {x} -\mathbf {x} ^{*}\|\leq \delta ,\,}



the expression





f
(


x


∗


)
≤
f
(

x

)


{\displaystyle f(\mathbf {x} ^{*})\leq f(\mathbf {x} )}



holds; that is to say, on some region around x* all of the function values are greater than or equal to the value at that point. Local maxima are defined similarly.
While a local minimum is at least as good as any nearby points, a global minimum is at least as good as every feasible point. In a convex problem, if there is a local minimum that is interior (not on the edge of the set of feasible points), it is also the global minimum, but a nonconvex problem may have more than one local minimum not all of which need be global minima.
A large number of algorithms proposed for solving nonconvex problems—including the majority of commercially available solvers—are not capable of making a distinction between locally optimal solutions and globally optimal solutions, and will treat the former as actual solutions to the original problem. Global optimization is the branch of applied mathematics and numerical analysis that is concerned with the development of deterministic algorithms that are capable of guaranteeing convergence in finite time to the actual optimal solution of a nonconvex problem.
Notation[edit]
Optimization problems are often expressed with special notation. Here are some examples:
Minimum and maximum value of a function[edit]
Consider the following notation:






min

x
∈

R




(

x

2


+
1
)


{\displaystyle \min _{x\in \mathbb {R} }\;(x^{2}+1)}



This denotes the minimum value of the objective function 




x

2


+
1


{\displaystyle x^{2}+1}

, when choosing x from the set of real numbers 




R



{\displaystyle \mathbb {R} }

. The minimum value in this case is 



1


{\displaystyle 1}

, occurring at 



x
=
0


{\displaystyle x=0}

.
Similarly, the notation






max

x
∈

R




2
x


{\displaystyle \max _{x\in \mathbb {R} }\;2x}



asks for the maximum value of the objective function 2x, where x may be any real number. In this case, there is no such maximum as the objective function is unbounded, so the answer is "infinity" or "undefined".
Optimal input arguments[edit]
Main article: Arg max
Consider the following notation:








a
r
g

m
i
n


x
∈
(
−
∞
,
−
1
]





x

2


+
1
,


{\displaystyle {\underset {x\in (-\infty ,-1]}{\operatorname {arg\,min} }}\;x^{2}+1,}



or equivalently








a
r
g

m
i
n

x




x

2


+
1
,


subject to:


x
∈
(
−
∞
,
−
1
]
.


{\displaystyle {\underset {x}{\operatorname {arg\,min} }}\;x^{2}+1,\;{\text{subject to:}}\;x\in (-\infty ,-1].}



This represents the value (or values) of the argument x in the interval 



(
−
∞
,
−
1
]


{\displaystyle (-\infty ,-1]}

 that minimizes (or minimize) the objective function x2 + 1 (the actual minimum value of that function is not what the problem asks for). In this case, the answer is x = –1, since x = 0 is infeasible, i.e. does not belong to the feasible set.
Similarly,








a
r
g

m
a
x


x
∈
[
−
5
,
5
]
,

y
∈

R





x
cos
⁡
(
y
)
,


{\displaystyle {\underset {x\in [-5,5],\;y\in \mathbb {R} }{\operatorname {arg\,max} }}\;x\cos(y),}



or equivalently








a
r
g

m
a
x


x
,

y




x
cos
⁡
(
y
)
,


subject to:


x
∈
[
−
5
,
5
]
,

y
∈

R

,


{\displaystyle {\underset {x,\;y}{\operatorname {arg\,max} }}\;x\cos(y),\;{\text{subject to:}}\;x\in [-5,5],\;y\in \mathbb {R} ,}



represents the 



(
x
,
y
)


{\displaystyle (x,y)}

 pair (or pairs) that maximizes (or maximize) the value of the objective function 



x
cos
⁡
(
y
)


{\displaystyle x\cos(y)}

, with the added constraint that x lie in the interval 



[
−
5
,
5
]


{\displaystyle [-5,5]}

 (again, the actual maximum value of the expression does not matter). In this case, the solutions are the pairs of the form (5, 2kπ) and (−5,(2k+1)π), where k ranges over all integers.
arg min and arg max are sometimes also written argmin and argmax, and stand for argument of the minimum and argument of the maximum.
History[edit]
Fermat and Lagrange found calculus-based formulae for identifying optima, while Newton and Gauss proposed iterative methods for moving towards an optimum.
The term "linear programming" for certain optimization cases was due to George B. Dantzig, although much of the theory had been introduced by Leonid Kantorovich in 1939. (Programming in this context does not refer to computer programming, but from the use of program by the United States military to refer to proposed training and logistics schedules, which were the problems Dantzig studied at that time.) Dantzig published the Simplex algorithm in 1947, and John von Neumann developed the theory of duality in the same year.
Other major researchers in mathematical optimization include the following:


Aharon Ben-Tal
Richard Bellman
Roger Fletcher
Ronald A. Howard
Fritz John
Narendra Karmarkar
William Karush
Leonid Khachiyan
Bernard Koopman
Harold Kuhn
László Lovász
Arkadi Nemirovski
Yurii Nesterov
Boris Polyak
Lev Pontryagin
James Renegar
R. Tyrrell Rockafellar
Cornelis Roos
Naum Z. Shor
Michael J. Todd
Albert Tucker


Major subfields[edit]

Convex programming studies the case when the objective function is convex (minimization) or concave (maximization) and the constraint set is convex. This can be viewed as a particular case of nonlinear programming or as generalization of linear or convex quadratic programming.

Linear programming (LP), a type of convex programming, studies the case in which the objective function f is linear and the constraints are specified using only linear equalities and inequalities. Such a constraint set is called a polyhedron or a polytope if it is bounded.
Second order cone programming (SOCP) is a convex program, and includes certain types of quadratic programs.
Semidefinite programming (SDP) is a subfield of convex optimization where the underlying variables are semidefinite matrices. It is a generalization of linear and convex quadratic programming.
Conic programming is a general form of convex programming. LP, SOCP and SDP can all be viewed as conic programs with the appropriate type of cone.
Geometric programming is a technique whereby objective and inequality constraints expressed as posynomials and equality constraints as monomials can be transformed into a convex program.


Integer programming studies linear programs in which some or all variables are constrained to take on integer values. This is not convex, and in general much more difficult than regular linear programming.
Quadratic programming allows the objective function to have quadratic terms, while the feasible set must be specified with linear equalities and inequalities. For specific forms of the quadratic term, this is a type of convex programming.
Fractional programming studies optimization of ratios of two nonlinear functions. The special class of concave fractional programs can be transformed to a convex optimization problem.
Nonlinear programming studies the general case in which the objective function or the constraints or both contain nonlinear parts. This may or may not be a convex program. In general, whether the program is convex affects the difficulty of solving it.
Stochastic programming studies the case in which some of the constraints or parameters depend on random variables.
Robust programming is, like stochastic programming, an attempt to capture uncertainty in the data underlying the optimization problem. Robust optimization targets to find solutions that are valid under all possible realizations of the uncertainties.
Combinatorial optimization is concerned with problems where the set of feasible solutions is discrete or can be reduced to a discrete one.
Stochastic optimization is used with random (noisy) function measurements or random inputs in the search process.
Infinite-dimensional optimization studies the case when the set of feasible solutions is a subset of an infinite-dimensional space, such as a space of functions.
Heuristics and metaheuristics make few or no assumptions about the problem being optimized. Usually, heuristics do not guarantee that any optimal solution need be found. On the other hand, heuristics are used to find approximate solutions for many complicated optimization problems.
Constraint satisfaction studies the case in which the objective function f is constant (this is used in artificial intelligence, particularly in automated reasoning).

Constraint programming is a programming paradigm wherein relations between variables are stated in the form of constraints.


Disjunctive programming is used where at least one constraint must be satisfied but not all. It is of particular use in scheduling.
Space mapping is a concept for modeling and optimization of an engineering system to high-fidelity (fine) model accuracy exploiting a suitable physically meaningful coarse or surrogate model.

In a number of subfields, the techniques are designed primarily for optimization in dynamic contexts (that is, decision making over time):

Calculus of variations seeks to optimize an action integral over some space to an extremum by varying a function of the coordinates.
Optimal control theory is a generalization of the calculus of variations which introduces control policies.
Dynamic programming studies the case in which the optimization strategy is based on splitting the problem into smaller subproblems. The equation that describes the relationship between these subproblems is called the Bellman equation.
Mathematical programming with equilibrium constraints is where the constraints include variational inequalities or complementarities.

Multi-objective optimization[edit]
Main article: Multi-objective optimization
Adding more than one objective to an optimization problem adds complexity. For example, to optimize a structural design, one would desire a design that is both light and rigid. When two objectives conflict, a trade-off must be created. There may be one lightest design, one stiffest design, and an infinite number of designs that are some compromise of weight and rigidity. The set of trade-off designs that cannot be improved upon according to one criterion without hurting another criterion is known as the Pareto set. The curve created plotting weight against stiffness of the best designs is known as the Pareto frontier.
A design is judged to be "Pareto optimal" (equivalently, "Pareto efficient" or in the Pareto set) if it is not dominated by any other design: If it is worse than another design in some respects and no better in any respect, then it is dominated and is not Pareto optimal.
The choice among "Pareto optimal" solutions to determine the "favorite solution" is delegated to the decision maker. In other words, defining the problem as multi-objective optimization signals that some information is missing: desirable objectives are given but combinations of them are not rated relative to each other. In some cases, the missing information can be derived by interactive sessions with the decision maker.
Multi-objective optimization problems have been generalized further into vector optimization problems where the (partial) ordering is no longer given by the Pareto ordering.
Multi-modal optimization[edit]
Optimization problems are often multi-modal; that is, they possess multiple good solutions. They could all be globally good (same cost function value) or there could be a mix of globally good and locally good solutions. Obtaining all (or at least some of) the multiple solutions is the goal of a multi-modal optimizer.
Classical optimization techniques due to their iterative approach do not perform satisfactorily when they are used to obtain multiple solutions, since it is not guaranteed that different solutions will be obtained even with different starting points in multiple runs of the algorithm. Evolutionary algorithms, however, are a very popular approach to obtain multiple solutions in a multi-modal optimization task.
Classification of critical points and extrema[edit]
Feasibility problem[edit]
The satisfiability problem, also called the feasibility problem, is just the problem of finding any feasible solution at all without regard to objective value. This can be regarded as the special case of mathematical optimization where the objective value is the same for every solution, and thus any solution is optimal.
Many optimization algorithms need to start from a feasible point. One way to obtain such a point is to relax the feasibility conditions using a slack variable; with enough slack, any starting point is feasible. Then, minimize that slack variable until slack is null or negative.
Existence[edit]
The extreme value theorem of Karl Weierstrass states that a continuous real-valued function on a compact set attains its maximum and minimum value. More generally, a lower semi-continuous function on a compact set attains its minimum; an upper semi-continuous function on a compact set attains its maximum.
Necessary conditions for optimality[edit]
One of Fermat's theorems states that optima of unconstrained problems are found at stationary points, where the first derivative or the gradient of the objective function is zero (see first derivative test). More generally, they may be found at critical points, where the first derivative or gradient of the objective function is zero or is undefined, or on the boundary of the choice set. An equation (or set of equations) stating that the first derivative(s) equal(s) zero at an interior optimum is called a 'first-order condition' or a set of first-order conditions.
Optima of equality-constrained problems can be found by the Lagrange multiplier method. The optima of problems with equality and/or inequality constraints can be found using the 'Karush–Kuhn–Tucker conditions'.
Sufficient conditions for optimality[edit]
While the first derivative test identifies points that might be extrema, this test does not distinguish a point that is a minimum from one that is a maximum or one that is neither. When the objective function is twice differentiable, these cases can be distinguished by checking the second derivative or the matrix of second derivatives (called the Hessian matrix) in unconstrained problems, or the matrix of second derivatives of the objective function and the constraints called the bordered Hessian in constrained problems. The conditions that distinguish maxima, or minima, from other stationary points are called 'second-order conditions' (see 'Second derivative test'). If a candidate solution satisfies the first-order conditions, then satisfaction of the second-order conditions as well is sufficient to establish at least local optimality.
Sensitivity and continuity of optima[edit]
The envelope theorem describes how the value of an optimal solution changes when an underlying parameter changes. The process of computing this change is called comparative statics.
The maximum theorem of Claude Berge (1963) describes the continuity of an optimal solution as a function of underlying parameters.
Calculus of optimization[edit]
Main article: Karush–Kuhn–Tucker conditions
See also: Critical point (mathematics), Differential calculus, Gradient, Hessian matrix, Positive definite matrix, Lipschitz continuity, Rademacher's theorem, Convex function, and Convex analysis
For unconstrained problems with twice-differentiable functions, some critical points can be found by finding the points where the gradient of the objective function is zero (that is, the stationary points). More generally, a zero subgradient certifies that a local minimum has been found for minimization problems with convex functions and other locally Lipschitz functions.
Further, critical points can be classified using the definiteness of the Hessian matrix: If the Hessian is positive definite at a critical point, then the point is a local minimum; if the Hessian matrix is negative definite, then the point is a local maximum; finally, if indefinite, then the point is some kind of saddle point.
Constrained problems can often be transformed into unconstrained problems with the help of Lagrange multipliers. Lagrangian relaxation can also provide approximate solutions to difficult constrained problems.
When the objective function is convex, then any local minimum will also be a global minimum. There exist efficient numerical techniques for minimizing convex functions, such as interior-point methods.
Computational optimization techniques[edit]
To solve problems, researchers may use algorithms that terminate in a finite number of steps, or iterative methods that converge to a solution (on some specified class of problems), or heuristics that may provide approximate solutions to some problems (although their iterates need not converge).
Optimization algorithms[edit]

Simplex algorithm of George Dantzig, designed for linear programming.
Extensions of the simplex algorithm, designed for quadratic programming and for linear-fractional programming.
Variants of the simplex algorithm that are especially suited for network optimization.
Combinatorial algorithms

Iterative methods[edit]
Main article: Iterative method
See also: Newton's method in optimization, Quasi-Newton method, Finite difference, Approximation theory, and Numerical analysis
The iterative methods used to solve problems of nonlinear programming differ according to whether they evaluate Hessians, gradients, or only function values. While evaluating Hessians (H) and gradients (G) improves the rate of convergence, for functions for which these quantities exist and vary sufficiently smoothly, such evaluations increase the computational complexity (or computational cost) of each iteration. In some cases, the computational complexity may be excessively high.
One major criterion for optimizers is just the number of required function evaluations as this often is already a large computational effort, usually much more effort than within the optimizer itself, which mainly has to operate over the N variables. The derivatives provide detailed information for such optimizers, but are even harder to calculate, e.g. approximating the gradient takes at least N+1 function evaluations. For approximations of the 2nd derivatives (collected in the Hessian matrix) the number of function evaluations is in the order of N². Newton's method requires the 2nd order derivates, so for each iteration the number of function calls is in the order of N², but for a simpler pure gradient optimizer it is only N. However, gradient optimizers need usually more iterations than Newton's algorithm. Which one is best with respect to the number of function calls depends on the problem itself.

Methods that evaluate Hessians (or approximate Hessians, using finite differences):

Newton's method
Sequential quadratic programming: A Newton-based method for small-medium scale constrained problems. Some versions can handle large-dimensional problems.
Interior point methods: This is a large class of methods for constrained optimization. Some interior-point methods use only (sub)gradient information, and others of which require the evaluation of Hessians.


Methods that evaluate gradients, or approximate gradients in some way (or even subgradients):

Coordinate descent methods: Algorithms which update a single coordinate in each iteration
Conjugate gradient methods: Iterative methods for large problems. (In theory, these methods terminate in a finite number of steps with quadratic objective functions, but this finite termination is not observed in practice on finite–precision computers.)
Gradient descent (alternatively, "steepest descent" or "steepest ascent"): A (slow) method of historical and theoretical interest, which has had renewed interest for finding approximate solutions of enormous problems.
Subgradient methods - An iterative method for large locally Lipschitz functions using generalized gradients. Following Boris T. Polyak, subgradient–projection methods are similar to conjugate–gradient methods.
Bundle method of descent: An iterative method for small–medium-sized problems with locally Lipschitz functions, particularly for convex minimization problems. (Similar to conjugate gradient methods)
Ellipsoid method: An iterative method for small problems with quasiconvex objective functions and of great theoretical interest, particularly in establishing the polynomial time complexity of some combinatorial optimization problems. It has similarities with Quasi-Newton methods.
Reduced gradient method (Frank–Wolfe) for approximate minimization of specially structured problems with linear constraints, especially with traffic networks. For general unconstrained problems, this method reduces to the gradient method, which is regarded as obsolete (for almost all problems).
Quasi-Newton methods: Iterative methods for medium-large problems (e.g. N<1000).
Simultaneous perturbation stochastic approximation (SPSA) method for stochastic optimization; uses random (efficient) gradient approximation.


Methods that evaluate only function values: If a problem is continuously differentiable, then gradients can be approximated using finite differences, in which case a gradient-based method can be used.

Interpolation methods
Pattern search methods, which have better convergence properties than the Nelder–Mead heuristic (with simplices), which is listed below.



Global convergence[edit]
More generally, if the objective function is not a quadratic function, then many optimization methods use other methods to ensure that some subsequence of iterations converges to an optimal solution. The first and still popular method for ensuring convergence relies on line searches, which optimize a function along one dimension. A second and increasingly popular method for ensuring convergence uses trust regions. Both line searches and trust regions are used in modern methods of non-differentiable optimization. Usually a global optimizer is much slower than advanced local optimizers (such as BFGS), so often an efficient global optimizer can be constructed by starting the local optimizer from different starting points.
Heuristics[edit]
Main article: Heuristic algorithm
Besides (finitely terminating) algorithms and (convergent) iterative methods, there are heuristics. A heuristic is any algorithm which is not guaranteed (mathematically) to find the solution, but which is nevertheless useful in certain practical situations. List of some well-known heuristics:

Memetic algorithm
Differential evolution
Evolutionary algorithms
Dynamic relaxation
Genetic algorithms
Hill climbing with random restart
Nelder-Mead simplicial heuristic: A popular heuristic for approximate minimization (without calling gradients)
Particle swarm optimization
Gravitational search algorithm
Artificial bee colony optimization
Simulated annealing
Stochastic tunneling
Tabu search
Reactive Search Optimization (RSO)[3] implemented in LIONsolver

Applications[edit]
Mechanics[edit]
Problems in rigid body dynamics (in particular articulated rigid body dynamics) often require mathematical programming techniques, since you can view rigid body dynamics as attempting to solve an ordinary differential equation on a constraint manifold; the constraints are various nonlinear geometric constraints such as "these two points must always coincide", "this surface must not penetrate any other", or "this point must always lie somewhere on this curve". Also, the problem of computing contact forces can be done by solving a linear complementarity problem, which can also be viewed as a QP (quadratic programming) problem.
Many design problems can also be expressed as optimization programs. This application is called design optimization. One subset is the engineering optimization, and another recent and growing subset of this field is multidisciplinary design optimization, which, while useful in many problems, has in particular been applied to aerospace engineering problems.
This approach may be applied in cosmology and astrophysics,.[4]
Economics and finance[edit]
Economics is closely enough linked to optimization of agents that an influential definition relatedly describes economics qua science as the "study of human behavior as a relationship between ends and scarce means" with alternative uses.[5] Modern optimization theory includes traditional optimization theory but also overlaps with game theory and the study of economic equilibria. The Journal of Economic Literature codes classify mathematical programming, optimization techniques, and related topics under JEL:C61-C63.
In microeconomics, the utility maximization problem and its dual problem, the expenditure minimization problem, are economic optimization problems. Insofar as they behave consistently, consumers are assumed to maximize their utility, while firms are usually assumed to maximize their profit. Also, agents are often modeled as being risk-averse, thereby preferring to avoid risk. Asset prices are also modeled using optimization theory, though the underlying mathematics relies on optimizing stochastic processes rather than on static optimization. International trade theory also uses optimization to explain trade patterns between nations. The optimization of portfolios is an example of multi-objective optimization in economics.
Since the 1970s, economists have modeled dynamic decisions over time using control theory. For example, microeconomists use dynamic search models to study labor-market behavior.[6] A crucial distinction is between deterministic and stochastic models.[7] Macroeconomists build dynamic stochastic general equilibrium (DSGE) models that describe the dynamics of the whole economy as the result of the interdependent optimizing decisions of workers, consumers, investors, and governments.[8][9]
Electrical engineering[edit]
Some common applications of optimization techniques in electrical engineering include active filter design,[10] stray field reduction in superconducting magnetic energy storage systems, space mapping design of microwave structures,[11] handset antennas,[12][13][14] electromagnetics-based design. Electromagnetically validated design optimization of microwave components and antennas has made extensive use of an appropriate physics-based or empirical surrogate model and space mapping methodologies since the discovery of space mapping in 1993 [15][16]
Civil engineering[edit]
Optimization has been widely used in civil engineering. The most common civil engineering problems that are solved by optimization are cut and fill of roads, life-cycle analysis of structures and infrastructures,[17] resource leveling[18] and schedule optimization.
Operations research[edit]
Another field that uses optimization techniques extensively is operations research.[19] Operations research also uses stochastic modeling and simulation to support improved decision-making. Increasingly, operations research uses stochastic programming to model dynamic decisions that adapt to events; such problems can be solved with large-scale optimization and stochastic optimization methods.
Control engineering[edit]
Mathematical optimization is used in much modern controller design. High-level controllers such as model predictive control (MPC) or real-time optimization (RTO) employ mathematical optimization. These algorithms run online and repeatedly determine values for decision variables, such as choke openings in a process plant, by iteratively solving a mathematical optimization problem including constraints and a model of the system to be controlled.
Geophysics[edit]
Optimization techniques are regularly used in geophysical parameter estimation problems. Given a set of geophysical measurements, e.g. seismic recordings, it is common to solve for the physical properties and geometrical shapes of the underlying rocks and fluids.
Molecular modeling[edit]
Main article: Molecular modeling
Nonlinear optimization methods are widely used in conformational analysis.
Solvers[edit]
Main article: List of optimization software
See also[edit]


Brachistochrone
Curve fitting
Deterministic global optimization
Goal programming
Important publications in optimization
Least squares
Mathematical Optimization Society (formerly Mathematical Programming Society)
Mathematical optimization algorithms
Mathematical optimization software
Process optimization
Simulation-based optimization
Test functions for optimization
Variational calculus


Notes[edit]


^ "The Nature of Mathematical Programming Archived 2014-03-05 at the Wayback Machine.," Mathematical Programming Glossary, INFORMS Computing Society.
^ W. Erwin Diewert (2008). "cost functions," The New Palgrave Dictionary of Economics, 2nd Edition Contents.
^ Battiti, Roberto; Mauro Brunato; Franco Mascia (2008). Reactive Search and Intelligent Optimization. Springer Verlag. ISBN 978-0-387-09623-0. Archived from the original on 2012-03-16. 
^ Haggag, S.; Desokey, F.; Ramadan, M., (2017). "A cosmological inflationary model using optimal control". Gravitation and Cosmology. Pleiades Publishing. 23 (3): 236–239. doi:10.1134/S0202289317030069. ISSN 1995-0721. 
^ Lionel Robbins (1935, 2nd ed.) An Essay on the Nature and Significance of Economic Science, Macmillan, p. 16.
^ A. K. Dixit ([1976] 1990). Optimization in Economic Theory, 2nd ed., Oxford. Description and contents preview.
^ A.G. Malliaris (2008). "stochastic optimal control," The New Palgrave Dictionary of Economics, 2nd Edition. Abstract.
^ Julio Rotemberg and Michael Woodford (1997), "An Optimization-based Econometric Framework for the Evaluation of Monetary Policy.NBER Macroeconomics Annual, 12, pp. 297-346.
^ From The New Palgrave Dictionary of Economics (2008), 2nd Edition with Abstract links:
   • "numerical optimization methods in economics" by Karl Schmedders
   • "convex programming" by Lawrence E. Blume
   • "Arrow–Debreu model of general equilibrium" by John Geanakoplos.
^ De, Bishnu Prasad; Kar, R.; Mandal, D.; Ghoshal, S. P. (2014-09-27). "Optimal selection of components value for analog active filter design using simplex particle swarm optimization". International Journal of Machine Learning and Cybernetics. 6 (4): 621–636. doi:10.1007/s13042-014-0299-0. ISSN 1868-8071. 
^ S. Koziel and J.W. Bandler, "Space mapping with multiple coarse models for optimization of microwave components," IEEE Microwave and Wireless Components Letters, vol. 8, no. 1, pp. 1–3, Jan. 2008.
^ S. Tu, Q.S. Cheng, Y. Zhang, J.W. Bandler, and N.K. Nikolova, “Space mapping optimization of handset antennas exploiting thin-wire models,” IEEE Trans. Antennas Propag., vol. 61, no. 7, pp. 3797-3807, July 2013.]
^ N. Friedrich, “Space mapping outpaces EM optimization in handset-antenna design,” microwaves&rf, Aug. 30, 2013.
^ Juan C. Cervantes-González, J. E. Rayas-Sánchez, C. A. López, J. R. Camacho-Pérez, Z. Brito-Brito, and J. L. Chavez-Hurtado,“Space mapping optimization of handset antennas considering EM effects of mobile phone components and human body,” Int. J. RF and Microwave CAE, vol. 26, no. 2, pp. 121-128, Feb. 2016
^ J.W. Bandler, R.M. Biernacki, S.H. Chen, P.A. Grobelny, and R.H. Hemmers, “Space mapping technique for electromagnetic optimization,” IEEE Trans. Microwave Theory Tech., vol. 42, no. 12, pp. 2536-2544, Dec. 1994.
^ J.W. Bandler, R.M. Biernacki, S.H. Chen, R.H. Hemmers, and K. Madsen,“Electromagnetic optimization exploiting aggressive space mapping,” IEEE Trans. Microwave Theory Tech., vol. 43, no. 12, pp. 2874-2882, Dec. 1995.
^ Piryonesi, S. M., & Tavakolan, M. (2017). A mathematical programming model for solving cost-safety optimization (CSO) problems in the maintenance of structures. KSCE Journal of Civil Engineering, 1-10.
^ Hegazy, T., (1999) Optimization of Resource Allocation and Leveling Using Genetic Algorithms, Journal of Construction Engineering and Management, ASCE, Vol. 125, No. 3, pp 167-175.
^ "New force on the political scene: the Seophonisten". http://www.seophonist-wahl.de. Archived from the original on 18 December 2014. Retrieved 14 September 2013.  External link in |publisher= (help)


Further reading[edit]
Comprehensive[edit]
Undergraduate level[edit]

Bradley, S.; Hax, A.; Magnanti, T. (1977). Applied mathematical programming. Addison Wesley. 
Parkinson, A.; Balling, R.; Hedengren, J. (2013). Optimization Methods for Engineering Design. Provo, UT: Brigham Young University. 
Rardin, Ronald L. (1997). Optimization in operations research. Prentice Hall. p. 919. ISBN 0-02-398415-5. copyright: 1998 
Strang, Gilbert (1986). Introduction to applied mathematics. Wellesley, MA: Wellesley-Cambridge Press (Strang's publishing company). pp. xii+758. ISBN 0-9614088-0-4. MR 0870634. 

Graduate level[edit]

Magnanti, Thomas L. (1989). "Twenty years of mathematical programming". In Cornet, Bernard; Tulkens, Henry. Contributions to Operations Research and Economics: The twentieth anniversary of CORE (Papers from the symposium held in Louvain-la-Neuve, January 1987). Cambridge, MA: MIT Press. pp. 163–227. ISBN 0-262-03149-3. MR 1104662. 
Minoux, M. (1986). Mathematical programming: Theory and algorithms. Egon Balas foreword) (Translated by Steven Vajda from the (1983 Paris: Dunod) French ed.). Chichester: A Wiley-Interscience Publication. John Wiley & Sons, Ltd. pp. xxviii+489. ISBN 0-471-90170-9. MR 2571910. (2008 Second ed., in French: Programmation mathématique: Théorie et algorithmes. Editions Tec & Doc, Paris, 2008. xxx+711 pp. ISBN 978-2-7430-1000-3. MR868279. 
Nemhauser, G. L.; Rinnooy Kan, A. H. G.; Todd, M. J., eds. (1989). Optimization. Handbooks in Operations Research and Management Science. 1. Amsterdam: North-Holland Publishing Co. pp. xiv+709. ISBN 0-444-87284-1. MR 1105099. 

J. E. Dennis, Jr. and Robert B. Schnabel, A view of unconstrained optimization (pp. 1–72);
Donald Goldfarb and Michael J. Todd, Linear programming (pp. 73–170);
Philip E. Gill, Walter Murray, Michael A. Saunders, and Margaret H. Wright, Constrained nonlinear programming (pp. 171–210);
Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin, Network flows (pp. 211–369);
W. R. Pulleyblank, Polyhedral combinatorics (pp. 371–446);
George L. Nemhauser and Laurence A. Wolsey, Integer programming (pp. 447–527);
Claude Lemaréchal, Nondifferentiable optimization (pp. 529–572);
Roger J-B Wets, Stochastic programming (pp. 573–629);
A. H. G. Rinnooy Kan and G. T. Timmer, Global optimization (pp. 631–662);
P. L. Yu, Multiple criteria decision making: five basic concepts (pp. 663–699).


Shapiro, Jeremy F. (1979). Mathematical programming: Structures and algorithms. New York: Wiley-Interscience [John Wiley & Sons]. pp. xvi+388. ISBN 0-471-77886-9. MR 0544669. 
Spall, J. C. (2003), Introduction to Stochastic Search and Optimization: Estimation, Simulation, and Control, Wiley, Hoboken, NJ.
University, Edwin K. P. Chong, Colorado State University, Stanislaw H. Żak, Purdue (2013). An introduction to optimization (Fourth edition. ed.). Hoboken, New Jersey: John Wiley & Sons. ISBN 9781118279014. 

Continuous optimization[edit]

Roger Fletcher (2000). Practical methods of optimization. Wiley. ISBN 978-0-471-49463-8. 
Mordecai Avriel (2003). Nonlinear Programming: Analysis and Methods. Dover Publishing. ISBN 0-486-43227-0. 
P. E. Gill, W. Murray and M. H. Wright (1982). Practical Optimization. Emerald Publishing. ISBN 978-0-12-283952-8. 
Xin-She Yang (2010). Engineering Optimization: An Introduction with Metaheuristic Applications. Wiley. ISBN 978-0-470-58246-6. 
Bonnans, J. Frédéric; Gilbert, J. Charles; Lemaréchal, Claude; Sagastizábal, Claudia A. (2006). Numerical optimization: Theoretical and practical aspects. Universitext (Second revised ed. of translation of 1997 French ed.). Berlin: Springer-Verlag. pp. xiv+490. doi:10.1007/978-3-540-35447-5. ISBN 3-540-35445-X. MR 2265882. 
Bonnans, J. Frédéric; Shapiro, Alexander (2000). Perturbation analysis of optimization problems. Springer Series in Operations Research. New York: Springer-Verlag. pp. xviii+601. ISBN 0-387-98705-3. MR 1756264. 
Boyd, Stephen P.; Vandenberghe, Lieven (2004). Convex Optimization (pdf). Cambridge University Press. ISBN 978-0-521-83378-3. Retrieved October 15, 2011. 
Jorge Nocedal and Stephen J. Wright (2006). Numerical Optimization. Springer. ISBN 0-387-30303-0. 
Ruszczyński, Andrzej (2006). Nonlinear Optimization. Princeton, NJ: Princeton University Press. pp. xii+454. ISBN 978-0-691-11915-1. MR 2199043. 
Robert J. Vanderbei (2013). Linear Programming: Foundations and Extensions, 4th Edition. Springer. ISBN 978-1-4614-7629-0. 

Combinatorial optimization[edit]

R. K. Ahuja, Thomas L. Magnanti, and James B. Orlin (1993). Network Flows: Theory, Algorithms, and Applications. Prentice-Hall, Inc. ISBN 0-13-617549-X.
William J. Cook, William H. Cunningham, William R. Pulleyblank, Alexander Schrijver; Combinatorial Optimization; John Wiley & Sons; 1 edition (November 12, 1997); ISBN 0-471-55894-X.
Gondran, Michel; Minoux, Michel (1984). Graphs and algorithms. Wiley-Interscience Series in Discrete Mathematics (Translated by Steven Vajda from the second (Collection de la Direction des Études et Recherches d'Électricité de France [Collection of the Department of Studies and Research of Électricité de France], v. 37. Paris: Éditions Eyrolles 1985. xxviii+545 pp. MR868083) French ed.). Chichester: John Wiley & Sons, Ltd. pp. xix+650. ISBN 978-2-7430-1035-5. MR 2552933. (Fourth ed. Collection EDF R&D. Paris: Editions Tec & Doc 2009. xxxii+784 pp. MR745802. 
Eugene Lawler (2001). Combinatorial Optimization: Networks and Matroids. Dover. ISBN 0-486-41453-1. 
Lawler, E. L.; Lenstra, J. K.; Rinnooy Kan, A. H. G.; Shmoys, D. B. (1985), The traveling salesman problem: A guided tour of combinatorial optimization, John Wiley & Sons, ISBN 0-471-90413-9 .
Jon Lee; A First Course in Combinatorial Optimization; Cambridge University Press; 2004; ISBN 0-521-01012-8.
Christos H. Papadimitriou and Kenneth Steiglitz Combinatorial Optimization : Algorithms and Complexity; Dover Pubns; (paperback, Unabridged edition, July 1998) ISBN 0-486-40258-4.

Relaxation (extension method)[edit]
Methods to obtain suitable (in some sense) natural extensions of optimization problems that otherwise lack of existence or stability of solutions to obtain problems with guaranteed existence of solutions and their stability in some sense (typically under various perturbation of data) are in general called relaxation. Solutions of such extended (=relaxed) problems in some sense characterizes (at least certain features) of the original problems, e.g. as far as their optimizing sequences concerns. Relaxed problems may also possesses their own natural linear structure that may yield specific optimality conditions different from optimality conditions for the original problems.

H. O. Fattorini: Infinite Dimensional Optimization and Control Theory. Cambridge Univ. Press, 1999.
P. Pedregal: Parametrized Measures and Variational Principles. Birkhäuser, Basel, 1997
T. Roubicek: "Relaxation in Optimization Theory and Variational Calculus". W. de Gruyter, Berlin, 1997. ISBN 3-11-014542-1.
J. Warga: Optimal control of differential and functional equations. Academic Press, 1972.

Journals[edit]

Computational Optimization and Applications
Journal of Computational Optimization in Economics and Finance
Journal of Economic Dynamics and Control
SIAM Journal on Optimization (SIOPT) and Editorial Policy
SIAM Journal on Control and Optimization (SICON) and Editorial Policy

External links[edit]

COIN-OR—Computational Infrastructure for Operations Research
Decision Tree for Optimization Software Links to optimization source codes
Global optimization
Mathematical Programming Glossary
Mathematical Programming Society
NEOS Guide currently being replaced by the NEOS Wiki[dead link]
Optimization Online A repository for optimization e-prints
Optimization Related Links
Convex Optimization I EE364a: Course from Stanford University
Convex Optimization – Boyd and Vandenberghe Book on Convex Optimization
Book and Course on Optimization Methods for Engineering Design
Mathematical Optimization in Operations Research from the Institute for Operations Research and the Management Sciences (INFORMS)







v
t
e


Optimization: Algorithms, methods, and heuristics








Unconstrained nonlinear: Methods calling …







… functions



Golden-section search
Interpolation methods
Line search
Nelder–Mead method
Successive parabolic interpolation





… and gradients




Convergence



Trust region
Wolfe conditions





Quasi–Newton



BFGS and L-BFGS
DFP
Symmetric rank-one (SR1)





Other methods



Gauss–Newton
Gradient
Levenberg–Marquardt
Conjugate gradient
Truncated Newton








… and Hessians



Newton's method





















Constrained nonlinear







General



Barrier methods
Penalty methods





Differentiable



Augmented Lagrangian methods
Sequential quadratic programming
Successive linear programming
















Convex optimization







Convex
minimization



Cutting-plane method
Reduced gradient (Frank–Wolfe)
Subgradient method





Linear and
quadratic




Interior point



Affine scaling
Ellipsoid algorithm of Khachiyan
Projective algorithm of Karmarkar





Basis-exchange



Simplex algorithm of Dantzig
Revised simplex algorithm
Criss-cross algorithm
Principal pivoting algorithm of Lemke



















Combinatorial







Paradigms



Approximation algorithm
Dynamic programming
Greedy algorithm
Integer programming

Branch and bound/cut







Graph
algorithms




Minimum
spanning tree



Bellman–Ford
Borůvka
Dijkstra
Floyd–Warshall
Johnson
Kruskal








Network flows



Dinic
Edmonds–Karp
Ford–Fulkerson
Push–relabel maximum flow
















Metaheuristics






Evolutionary algorithm
Hill climbing
Local search
Simulated annealing
Tabu search











Software












v
t
e


Areas of mathematics






outline
topic lists





Areas



Algebra

elementary
linear
multilinear
abstract


Arithmetic / Number theory
Calculus / Analysis
Category theory
Combinatorics
Group theory
Computation
Control theory
Differential equations / Dynamical systems
Functional analysis
Game theory
Geometry

discrete
algebraic
analytic
differential
finite


Graph theory
History of mathematics
Information theory
Lie theory
Mathematics and art
Mathematics education
Mathematical logic
Mathematical physics
Mathematical statistics
Numerical analysis
Optimization
Order theory
Philosophy of mathematics
Philosophy of mathematics education
Probability
Recreational mathematics
Representation theory
Set theory
Statistics
Topology
Trigonometry





Divisions



Pure
Applied
Discrete
Computational








 Category
 Portal
Commons
WikiProject












v
t
e


Systems engineering



Subfields



Aerospace engineering
Biological systems engineering
Configuration management
Earth systems engineering and management
Electrical engineering
Enterprise systems engineering
Performance engineering
Reliability engineering
Safety engineering





Processes



Requirements engineering
Functional specification
System integration
Verification and validation
Design review





Concepts



Business process
System
System lifecycle
V-Model
Systems development life cycle





Tools



Decision-making
Function modelling
IDEF
Optimization
Quality function deployment
System dynamics
Systems Modeling Language
Systems analysis
Systems modeling
Work breakdown structure





People



James S. Albus
Ruzena Bajcsy
Wernher von Braun
Kathleen Carley
Harold Chestnut
Arthur David Hall III
Barbara Grosz
Derek Hitchins
Robert E. Machol
Radhika Nagpal
Simon Ramo
Joseph Francis Shea
Katia Sycara
Manuela M. Veloso
John N. Warfield





Related fields



Control engineering
Computer engineering
Industrial engineering
Operations research
Project management
Quality management
Risk management
Software engineering








Category









Authority control



GND: 4043664-0










 
						Retrieved from "https://en.wikipedia.org/w/index.php?title=Mathematical_optimization&oldid=809372670"					
Categories: Mathematical optimizationOperations researchMathematical and quantitative methods (economics)Hidden categories: Webarchive template wayback linksCS1 errors: external linksAll articles with dead external linksArticles with dead external links from June 2015Wikipedia articles with GND identifiers 
